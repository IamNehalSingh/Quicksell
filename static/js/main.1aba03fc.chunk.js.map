{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","increment","e","document","getElementById","stepUp","decrement","stepDown","change","setState","prevState","value","render","className","style","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","onClick","id","type","min","max","state","onChange","background","borderTopRightRadius","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"yOA6DeA,E,kDAvDb,WAAYC,GAAO,IAAD,8BACZ,cAAMA,IASZC,UAAY,SAACC,GACXC,SAASC,eAAe,aAAaC,UAXrB,EAclBC,UAAY,SAACJ,GACXC,SAASC,eAAe,aAAaG,YAfrB,EAkBlBC,OAAS,SAACN,GACR,EAAKO,UACG,SAAAC,GACI,MAAM,CACFC,MAAMT,EAAES,WAtBR,EA4BlBC,OAAS,WAcP,OACE,qBAAKC,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACE,wBAAQA,UAAU,MAAMC,MAfT,CACrBC,oBAAoB,MACpBC,uBAAuB,MACvBC,gBAAgB,SAYqCC,QAAS,EAAKZ,UAA7D,eACA,uBAAOa,GAAG,YAAYC,KAAK,SAASC,IAAK,EAAGC,IAAK,IAAMX,MAAO,EAAKY,MAAMZ,MAAOa,SAAU,EAAKhB,OAAQK,UAAU,YACjH,wBAAQA,UAAU,MAAMC,MAVT,CACrBW,WAAW,UACXC,qBAAqB,MACrBV,uBAAuB,OAO8BE,QAAS,EAAKjB,UAA7D,qBA7CJ,EAAKsB,MAAQ,CACXZ,MAAM,GAER,EAAKV,UAAY,EAAKA,UAAU0B,KAAf,gBACjB,EAAKrB,UAAY,EAAKA,UAAUqB,KAAf,gBACjB,EAAKnB,OAAS,EAAKA,OAAOmB,KAAZ,gBAPF,E,UADFC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1B0B,M","file":"static/js/main.1aba03fc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './App.css';\n\n\nclass App extends React.Component{\n  constructor(props){\n        super(props);\n        this.state = {\n          value:1\n        }\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.change = this.change.bind(this);\n  }\n\n  increment = (e)=>{\n    document.getElementById('demoInput').stepUp();\n  }\n\n  decrement = (e)=>{\n    document.getElementById('demoInput').stepDown();\n  }\n\n  change = (e)=>{\n    this.setState(\n            prevState => {\n                return{\n                    value:e.value,\n                }\n            }\n        );\n  }\n\n  render = () => {\n    //border-top-left-radius: 5px;border-bottom-left-radius: 5px;background-color: white; \n    const decrementStyle = {\n      borderTopLeftRadius:\"5px\",\n      borderBottomLeftRadius:\"5px\",\n      backgroundColor:\"white\"\n    };\n    \n    //background: #B24242;border-top-right-radius: 5px;border-bottom-right-radius: 5px;color: white;\n    const incrementStyle = {\n      background:\"#B24242\",\n      borderTopRightRadius:\"5px\",\n      borderBottomLeftRadius:\"5px\"\n    };\n    return (\n      <div className=\"div_css\" > \n          <div className=\"div2\">\n            <button className=\"btn\" style={decrementStyle} onClick={this.decrement}>-</button>\n            <input id=\"demoInput\" type=\"number\" min={1} max={1000} value={this.state.value} onChange={this.change} className=\"textbox\" />\n            <button className=\"btn\" style={incrementStyle} onClick={this.increment}>+</button>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}